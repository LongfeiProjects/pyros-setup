# -*- coding: utf-8 -*-
from __future__ import absolute_import, division, print_function

"""
Forcing import from indigo distro
"""

import os
import types
import sys

# Configuring logging default handler
import logging
_logger = logging.getLogger(__name__)

from pyros_setup.common.utils import deprecated
from pyros_config import ConfigHandler

assert os.path.exists('/opt/ros/indigo')
DETECTED_DISTRO='indigo'

_config_handler = ConfigHandler(
                __name__,
                instance_path=None,
                instance_relative_config=False,
                root_path='/opt/ros/indigo/etc',
                default_config={
                    'WORKSPACES': [],
                },
            )


def configure(config=None):
    """
    load configuration
    :param config:
        if string, it is assumed to be a path to a python configuration file
        else if dict, it is assumed to directly contain the configuration settings
        otherwise the object passed will be introspected to attempt to set the configuration settings.
    :return: self
    """

    config = config or 'pyros_setup.cfg'


    _config_handler.configure_file(config=config, create_if_missing="""
# default configuration generated by pyros_setup.indigo
# Usage from python :
# import pyros_setup
# pyros_setup.configurable_import().configure().activate()
#
# Fill in your workspaces here, if you want pyros_setup to dynamically import ROS packages from it.
WORKSPACES=[]
""")


def show_config():
    # TODO improve this...
    print(_config_handler.config)


def activate():
    """
    Activate import relay (via setting sys.modules[])
    """

    # TODO : prevent multiple activation (especially between different distros...)

    # TODO : put that in context to allow deactivation... ( but HOWTO mix deactivation with module import ?)

    # The actual trick
    _logger.warning("Dynamic PyROS setup starting...")
    from pyros_setup.common.ros_setup import ROS_emulate_setup
    # we want this to except in case of bad config, because default_config has to have these fields.
    ROS_emulate_setup('indigo', *_config_handler.config['WORKSPACES'])

    # Main relay
    # CAREFUL this doesn't work sometimes (had problem when using from celery bootstep...)
    # sys.modules[self.config_handler.import_name] = self

    _logger.warning("Dynamic PyROS setup done.")


__all__ = [
    '__version__',
    'deprecated',
    'configure',
    'activate',
]
